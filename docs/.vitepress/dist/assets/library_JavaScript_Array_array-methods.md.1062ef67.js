import{_ as s,o as t,c as a,S as n}from"./chunks/framework.0fe8f473.js";const F=JSON.parse('{"title":"数组方法","description":"","frontmatter":{},"headers":[],"relativePath":"library/JavaScript/Array/array-methods.md","filePath":"library/JavaScript/Array/array-methods.md"}'),l={name:"library/JavaScript/Array/array-methods.md"},o=n(`<h1 id="数组方法" tabindex="-1">数组方法 <a class="header-anchor" href="#数组方法" aria-label="Permalink to &quot;数组方法&quot;">​</a></h1><h2 id="一些数组核心方法" tabindex="-1">一些数组核心方法 <a class="header-anchor" href="#一些数组核心方法" aria-label="Permalink to &quot;一些数组核心方法&quot;">​</a></h2><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>push</td><td>在数组末尾添加元素</td></tr><tr><td>pop</td><td>删除数组里最后一个元素</td></tr><tr><td>unshift</td><td>在数组开头插入元素</td></tr><tr><td>shift</td><td>删除数组的第一个元素</td></tr><tr><td>splice</td><td>可实现对数组元素进行 删除、插入和替换操作</td></tr><tr><td>slice</td><td>截取数组元素，传入索引值，将数组中对应索引范围内的元素作为新数组返回</td></tr><tr><td>concat</td><td>连接 2 个或多个数组，并返回结果</td></tr><tr><td>every</td><td>对数组中的每个元素运行给定函数，如果所有元素都符合要求就返回 true，否则返回 false</td></tr><tr><td>some</td><td>循环遍历数组元素运行给定函数，只要存在一项符合条件，就返回 true，都不符合则返回 false</td></tr><tr><td>filter</td><td>对数组每一项进行筛选，符合条件的元素组成新的数组并返回</td></tr><tr><td>forEach</td><td>运行循环数组，该方法没有返回值</td></tr><tr><td>reduce</td><td>运行循环数组，将结果累计汇总为单个值。 数组求和/积、数组扁平化、计算数组中每个元素出现次数、查找数组中的最大值/最小值</td></tr><tr><td>join</td><td>将所有的数组元素连接成一个字符串，可指定分隔符连接成字符串</td></tr><tr><td>indexOf</td><td>返回第一个与给定参数相等的数组元素的索引，没有则返回 -1</td></tr><tr><td>lastIndexOf</td><td>返回数组中与给定参数相等的元素的索引里的最大值</td></tr><tr><td>map</td><td>循环遍历数组，结果以数组的形式返回</td></tr><tr><td>find</td><td>循环数组，根据给定条件查找数组中符合要求的元素，若找到则返回该元素</td></tr><tr><td>findIndex</td><td>遍历数组，根据给定条件查找数组中符合要求的元素，若找到则返回该元素在数组中的 索引值</td></tr><tr><td>includes</td><td>遍历数组，若数组中存在某个元素则返回 true，否则返回 false</td></tr><tr><td>fill</td><td>用静态值填充数组</td></tr><tr><td>from</td><td>根据已有数组创建一个新数组</td></tr><tr><td>reverse</td><td>翻转数组元素</td></tr><tr><td>sort</td><td>按照字母顺序对数组排序，支持传入指定排序方法的函数作为参数</td></tr><tr><td>toString</td><td>将数组作为字符串返回</td></tr><tr><td>valueOf</td><td>将数组作为字符串返回</td></tr><tr><td>@@iterator</td><td>返回一个包含数组键值对的迭代器对象，可以通过同步调用得到数组元素的键值对</td></tr><tr><td>entries</td><td>返回包含数组所有键值对的@@iterator</td></tr><tr><td>copyWithin</td><td>复制数组中一系列元素到同一数组指定的起始位置</td></tr><tr><td>keys</td><td>返回包含数组所有索引的@@iterator</td></tr><tr><td>values</td><td>返回包含数组中所有值的@@iterator</td></tr><tr><td>of</td><td>根据传入的参数创建一个新数组</td></tr></tbody></table><h3 id="实例代码" tabindex="-1">实例代码 <a class="header-anchor" href="#实例代码" aria-label="Permalink to &quot;实例代码&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> arr1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">of</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">arr1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fill</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//对已有的数组arr1所有元素填充为0</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 将4、5、6复制到数组[1,2,3,4,5,6]前三个位置，得到 [4,5,6,4,5,6]</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> arr2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">arr2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">copyWithin</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//  将4、5两个值复制到索引位置1和2。(3,5)包括开始位置3不包括结束位置5</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> arr3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">arr3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">copyWithin</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div>`,5),r=[o];function p(e,d,c,C,y,D){return t(),a("div",null,r)}const i=s(l,[["render",p]]);export{F as __pageData,i as default};
