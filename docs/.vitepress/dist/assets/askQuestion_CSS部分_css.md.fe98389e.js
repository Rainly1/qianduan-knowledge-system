import{_ as l,o as s,c as a,S as n}from"./chunks/framework.0fe8f473.js";const C=JSON.parse('{"title":"CSS","description":"","frontmatter":{},"headers":[],"relativePath":"askQuestion/CSS部分/css.md","filePath":"askQuestion/CSS部分/css.md"}'),i={name:"askQuestion/CSS部分/css.md"},t=n(`<h1 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to &quot;CSS&quot;">​</a></h1><h3 id="简述对-bfc-的理解" tabindex="-1">简述对 BFC 的理解 <a class="header-anchor" href="#简述对-bfc-的理解" aria-label="Permalink to &quot;简述对 BFC 的理解&quot;">​</a></h3><p>一、介绍：BFC 是页面中的一块渲染区域，并有自己的一套渲染规则。BFC 的目的是形成一个相对于外界完全独立的空间，让内部的子元素不会影响到外部元素。</p><p>二、触发条件：</p><ul><li>根元素 html</li><li>浮动元素：float: left/right</li><li>overflow 的值不为 visible，为 auto、scroll、hidden</li><li>display 的值为 inline-block、flex、inltable-cell、table-caption、table、inline-table、inline-flex、grid、inline-grid</li><li>position 的值为 absolute 或 fixed</li></ul><p>三、应用场景：</p><ol><li>防止 margin 重叠</li><li>清除内部浮动 清除浮动方式：</li></ol><ul><li>父盒子设置高度；</li><li>父盒子设置 overflow：hidden；</li><li>额外添加一个标签，设置 clear: both；</li><li>伪元素清除浮动；</li><li>双伪元素设置清除浮动。</li></ul><ol start="3"><li>自适应多栏布局</li></ol><h3 id="css-选择器有哪些-优先级-哪些属性可以继承" tabindex="-1">CSS 选择器有哪些？优先级？哪些属性可以继承？ <a class="header-anchor" href="#css-选择器有哪些-优先级-哪些属性可以继承" aria-label="Permalink to &quot;CSS 选择器有哪些？优先级？哪些属性可以继承？&quot;">​</a></h3><p>一、选择器：</p><ul><li><p>id 选择器：#id</p></li><li><p>class 类选择器：.class</p></li><li><p>标签选择器：div</p></li><li><p>后代选择器（#box div）,选择 id 为 box 元素内部所有的 div 元素</p></li><li><p>子选择器（.one&gt;one1）,选择父元素为.one 的所有.one1 的元素</p></li><li><p>相邻同胞选择器（.one+.two）,选择紧接在.one 之后的所有.two 元素</p></li><li><p>群组选择器（div,p）,选择 div、p 的所有元素</p></li><li><p>伪类选择器</p></li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">first-of-type</span><span style="color:#A6ACCD;"> 表示一组同级元素中其类型的第一个元素</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">last-of-type</span><span style="color:#A6ACCD;"> 表示一组同级元素中其类型的最后一个元素</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">only-of-type</span><span style="color:#A6ACCD;"> 表示没有同类型兄弟元素的元素</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">only-child</span><span style="color:#A6ACCD;"> 表示没有任何兄弟的元素</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">nth-child</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">n</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> 根据元素在一组同级中的位置匹配元素</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">nth-last-of-type</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">n</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> 匹配给定类型的元素，基于它们在一组兄弟元素中的位置，从末尾开始计数</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">last-child</span><span style="color:#A6ACCD;"> 表示一组兄弟元素中的最后一个元素</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">root</span><span style="color:#A6ACCD;"> 设置HTML文档</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">empty</span><span style="color:#A6ACCD;"> 指定空的元素</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">enabled</span><span style="color:#A6ACCD;"> 选择可用元素</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">disabled</span><span style="color:#A6ACCD;"> 选择被禁用元素</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">checked</span><span style="color:#A6ACCD;"> 选择选中的元素</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">not</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">selector</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> 选择与 &lt;selector</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> 不匹配的所有元素</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">link</span><span style="color:#A6ACCD;">：选择未被访问的链接</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">visited</span><span style="color:#A6ACCD;">：选取已被访问的链接</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">active</span><span style="color:#A6ACCD;">：选择活动链接</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">hover</span><span style="color:#A6ACCD;">：鼠标指针浮动在上面的元素</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">focus</span><span style="color:#A6ACCD;">：选择具有焦点的</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">first-child</span><span style="color:#A6ACCD;">：选择父元素下的第一个子元素</span></span></code></pre></div><ul><li>伪元素选择器</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">first-letter</span><span style="color:#A6ACCD;">：用于选取指定选择器的首字母</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">first-line</span><span style="color:#A6ACCD;">：选取指定选择器的首行</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">before</span><span style="color:#A6ACCD;">：选择器在被选元素的内容前面插入内容</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">after</span><span style="color:#A6ACCD;">：选择器在被选元素的内容后面插入内容</span></span></code></pre></div><ul><li>属性选择器</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">attribute</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 选择带有attribute属性的元素</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">attribute</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">value</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 选择所有使用attribute=value的元素</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">attribute</span><span style="color:#89DDFF;">~=</span><span style="color:#C3E88D;">value</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 选择attribute属性包含value的元素</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">attribute</span><span style="color:#89DDFF;">|=</span><span style="color:#C3E88D;">value</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">：选择attribute属性以value开头的元素</span></span></code></pre></div><ul><li>层次选择器(p~ul)，选择前面有 p 元素的每个 ul 元素</li><li>伪类选择器</li></ul><p>二、优先级：内联 &gt; ID 选择器 &gt; 类选择器 &gt; 标签选择器</p><p>三、 继承属性</p><ul><li>字体系列属性：</li><li>文本系列属性：</li><li>元素可见性：</li><li>表格布局属性：</li><li>列表属性：</li><li>引用</li><li>光标属性 <strong>注意：</strong> a 标签的字体颜色不能被继承；h1~h6 标签字体的大小不能被继承</li></ul><p><strong>无继承的属性：</strong></p><ul><li>display</li><li>文本属性：vertical-align、text-decoration</li><li>盒子模型的属性：width、height、margin、padding</li><li>背景属性：background-color、background-image、background-repeat、background-position</li><li>定位属性：浮动、清除浮动、定位 position 等</li><li>生成内容属性：content、counter-reset、counter-increment</li><li>轮廓样式属性：ontline-style、outline-width、outline-color、outline</li><li>页面样式属性：size、page-break-before、page-break-after、</li></ul><h3 id="css-中有哪些方式可以隐藏页面元素-区别" tabindex="-1">CSS 中有哪些方式可以隐藏页面元素？区别？ <a class="header-anchor" href="#css-中有哪些方式可以隐藏页面元素-区别" aria-label="Permalink to &quot;CSS 中有哪些方式可以隐藏页面元素？区别？&quot;">​</a></h3><p>一、实现方式：</p><ul><li>display: none;</li><li>visibility: hidden;</li><li>opacity：0;</li><li>设置 height、width 模型属性为 0;</li><li>position: absolute;</li><li>clip-path</li></ul><p>**总结：**最常用的是 display:none 和 visibility:hidden，</p><p>二、区别：</p><table><thead><tr><th style="text-align:left;"></th><th>display:none</th><th>visibility:hidden</th><th>opacity:0</th></tr></thead><tbody><tr><td style="text-align:left;">页面中</td><td>不存在</td><td>存在，依然占据空间</td><td>存在，但依然占据空间</td></tr><tr><td style="text-align:left;">重排</td><td>会</td><td>不会</td><td>不会</td></tr><tr><td style="text-align:left;">重绘</td><td>会</td><td>会</td><td>不一定</td></tr><tr><td style="text-align:left;">自身绑定事件</td><td>不触发</td><td>不触发</td><td>可触发</td></tr><tr><td style="text-align:left;">transition</td><td>不支持</td><td>支持</td><td>支持</td></tr><tr><td style="text-align:left;">子元素可复原</td><td>不能</td><td>能</td><td>不能</td></tr><tr><td style="text-align:left;">被遮挡的元素可触发事件</td><td>能</td><td>能</td><td>不能</td></tr></tbody></table><h3 id="元素水平垂直居中的方法有哪些-如果元素不定宽高呢" tabindex="-1">元素水平垂直居中的方法有哪些？如果元素不定宽高呢？ <a class="header-anchor" href="#元素水平垂直居中的方法有哪些-如果元素不定宽高呢" aria-label="Permalink to &quot;元素水平垂直居中的方法有哪些？如果元素不定宽高呢？&quot;">​</a></h3><p>一、实现方式：</p><ul><li>定位+margin：auto</li><li>定位：margin：负值</li><li>定位+transform</li><li>table 布局</li><li>flex 布局</li><li>grid 布局</li></ul><p>二、元素宽高未知，仍能实现水平垂直居中的方法：</p><ul><li>定位+margin：auto</li><li>定位+transform</li><li>flex 布局</li><li>grid 布局</li></ul><p>三、 总结： <strong>1. 内联元素居中布局</strong></p><ol><li>水平居中</li></ol><ul><li>行内元素可设置：text-align: center;</li><li>flex 布局设置父元素：display: flex;justify-content: center;</li></ul><ol start="2"><li>垂直居中</li></ol><ul><li>单行文本父元素确认高度：height === line-height</li><li>多行文本父元素确认高度：display: table-cell;vertical-align:middle</li></ul><p><strong>2. 块级元素居中布局</strong></p><ol><li>水平居中</li></ol><ul><li>定宽：margin:0 auto</li><li>绝对定位+left:50%+margin:负自身一半</li></ul><ol start="2"><li>垂直居中</li></ol><ul><li>position：absolute;设置 left、top、margin-left、margin-top（定高）</li><li>display：table-cell</li><li>transform：translate(X,Y)</li><li>flex(不定高，不定宽)</li><li>grid(不定高，不定宽)，兼容性相对比较差</li></ul><h3 id="如何实现两栏布局-右侧自适应-三栏布局中间自适应" tabindex="-1">如何实现两栏布局，右侧自适应，三栏布局中间自适应 <a class="header-anchor" href="#如何实现两栏布局-右侧自适应-三栏布局中间自适应" aria-label="Permalink to &quot;如何实现两栏布局，右侧自适应，三栏布局中间自适应&quot;">​</a></h3><p>一、两栏布局</p><ol><li>float</li></ol><ul><li>使用 float 左浮动左边栏</li><li>右边模块使用 margin-left 撑出内容块做内容展示</li><li>为父级元素添加 BFC，防止下方元素飞到上方内容</li></ul><ol start="2"><li>flex 弹性布局，为了让左右两个盒子高度自动，需要设置 align-items: flex-start</li></ol><p>二、三栏布局 实现方式：</p><ul><li>两边 float，中间使用 margin</li><li>两边 absolute，中间使用 margin</li><li>两边 float 和负 margin</li><li>display: table 实现</li><li>flex 布局</li><li>grid 网格布局</li></ul><h3 id="说说-flexbox-弹性布局-以及适用场景" tabindex="-1">说说 flexbox(弹性布局)以及适用场景？ <a class="header-anchor" href="#说说-flexbox-弹性布局-以及适用场景" aria-label="Permalink to &quot;说说 flexbox(弹性布局)以及适用场景？&quot;">​</a></h3><p>一、介绍：采用 flex 弹性布局的元素，其所有子元素自动成为容器成员 flex item</p><p>二、属性：关于 flex 常用的属性，可划分为容器属性和容器成员属性 容器属性：</p><ol><li>flex-direction：设置主轴方向,属性：</li></ol><ul><li>row：水平方向，起点在左端</li><li>column：垂直方向，起点在上端</li><li>row-recerse：水平方向，起点在右端</li><li>column-reverse：垂直方向，起点在下端</li></ul><ol start="2"><li>flex-wrap：设置是否换行，属性：</li></ol><ul><li>nowrap：不换行</li><li>wrap：换行，第一行在下方</li><li>wrap-reverse：换行，第一行在上方</li></ul><ol start="3"><li>flex-flow：设置主轴方向和是否换行，是 flex-direction 和 flex-wrap 的简写形式。默认值为 row nowrap</li><li>justify-content：设置主轴对齐方式，属性：</li></ol><ul><li>flex-start(默认值)：左对齐</li><li>flex-end：右对齐</li><li>center：居中</li><li>space-between：两端对齐，项目之间的间隔都相等</li><li>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍</li></ul><ol start="5"><li>align-items：设置交叉轴对齐方式,属性：</li></ol><ul><li>flex-start：交叉轴起点对齐</li><li>flex-end：交叉轴终点对齐</li><li>center：交叉轴中心对齐</li><li>baseline：第一根轴线与交叉轴的基线对齐</li><li>stretch：如果项目未设置高度或设为 auto，将占满整个容器的高度</li></ul><ol start="6"><li>align-content：设置多根轴线的对齐方式。如果只有一根轴线则无效。属性：</li></ol><ul><li>flex-start：与交叉轴的起点对齐</li><li>flex-end：与交叉轴的终点对齐</li><li>center：与交叉轴的中点对齐</li><li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布</li><li>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍</li><li>stretch(默认值)：轴线占满整个交叉轴</li></ul><h3 id="display-的-block、inline-和-inline-block-的区别" tabindex="-1">display 的 block、inline 和 inline-block 的区别 <a class="header-anchor" href="#display-的-block、inline-和-inline-block-的区别" aria-label="Permalink to &quot;display 的 block、inline 和 inline-block 的区别&quot;">​</a></h3><ul><li>block：会独占一行，多个元素会另起一行，可以设置 width、height、margin 和 padding 属性；</li><li>inline：多个元素会紧挨在一行，设置 width、height、垂直方向的 padding 和 margin 属性无效，可以设置水平方向的 margin 和 padding；</li><li>inline-block：将对象设置为 inline 对象，但对象的内容作为 block 对象呈现，之后的内联对象会被排列在同一行内。 (1) 行内元素：设置宽高无效，不能设置垂直方向的 padding 和 margin，可以设置水平方向的 margin 和 padding 属性。 (2) 块级元素：可以设置宽高，margin 和 padding，自动换行，多个块级元素默认从上到下。</li></ul><h3 id="link-和-import-区别" tabindex="-1">link 和@import 区别 <a class="header-anchor" href="#link-和-import-区别" aria-label="Permalink to &quot;link 和@import 区别&quot;">​</a></h3>`,67),e=[t];function o(p,r,c,d,y,u){return s(),a("div",null,e)}const h=l(i,[["render",o]]);export{C as __pageData,h as default};
